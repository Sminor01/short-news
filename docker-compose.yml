services:
  # PostgreSQL Database
  postgres:
    image: postgres:16.0
    container_name: shot-news-postgres
    environment:
      POSTGRES_DB: shot_news
      POSTGRES_USER: shot_news
      POSTGRES_PASSWORD: shot_news_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shot_news -d shot_news"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:7.4.0-alpine
    container_name: shot-news-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shot-news-backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://shot_news:shot_news_dev@postgres:5432/shot_news
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
      - DEBUG=true
      - SECRET_KEY=dev-secret-key-change-in-production
      - TELEGRAM_BOT_TOKEN=8358550051:AAFVEGVvywc3n636YgYnHFT56JAbYgGIKLA
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shot-news-celery-worker
    environment:
      - DATABASE_URL=postgresql+asyncpg://shot_news:shot_news_dev@postgres:5432/shot_news
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENVIRONMENT=development
      - DEBUG=true
      - SECRET_KEY=dev-secret-key-change-in-production
      - TELEGRAM_BOT_TOKEN=8358550051:AAFVEGVvywc3n636YgYnHFT56JAbYgGIKLA
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A celery_app worker --loglevel=info

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shot-news-celery-beat
    environment:
      - DATABASE_URL=postgresql+asyncpg://shot_news:shot_news_dev@postgres:5432/shot_news
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENVIRONMENT=development
      - DEBUG=true
      - SECRET_KEY=dev-secret-key-change-in-production
      - TELEGRAM_BOT_TOKEN=8358550051:AAFVEGVvywc3n636YgYnHFT56JAbYgGIKLA
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A celery_app beat --loglevel=info

  # News Scraper (Runs every hour)
  news-scraper:
    build:
      context: ./backend
      dockerfile: Dockerfile.scraper
    container_name: shot-news-scraper
    environment:
      - DATABASE_URL=postgresql+asyncpg://shot_news:shot_news_dev@postgres:5432/shot_news
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
      - DEBUG=true
      - SECRET_KEY=dev-secret-key-change-in-production
      - TELEGRAM_BOT_TOKEN=8358550051:AAFVEGVvywc3n636YgYnHFT56JAbYgGIKLA
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - scraper_logs:/var/log
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "-f", "cron"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: shot-news-frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  scraper_logs:

networks:
  default:
    name: shot-news-network
